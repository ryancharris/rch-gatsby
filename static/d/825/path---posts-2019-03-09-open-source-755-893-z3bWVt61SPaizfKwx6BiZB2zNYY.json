{"data":{"markdownRemark":{"html":"<p>When I was first trying to transition into tech, I spent a lot of time networking at Meetups and having coffee with local developers to find out how I could build my skills. There were three pieces of advice I heard consistently: do online tutorials, build portfolio projects and contribute to open source projects.</p>\n<p>While the first two are relatively straightforward, contributing to open source software (OSS) projects can be a bit more opaque. Even experienced developers unfamiliar with OSS often have questions like:</p>\n<ul>\n<li>How do I find an open source project?</li>\n<li>What is the workflow for contributing to one?</li>\n<li>Where do I find bugs or features to work on?</li>\n</ul>\n<p>These are all great questions, so to make the process a bit less daunting, let’s go through them one by one. Then, you’ll be well equipped to start contributing!</p>\n<h3>Why contribute to open source?</h3>\n<p>Before we get into the “hows” of open source, let’s talk a bit about the “whys”. As a developer, some benefits for participating in the OSS community include:</p>\n<ol>\n<li>You will learn common team-based workflows, including how to use version control systems like git and platforms like GitHub</li>\n<li>You will gain experience communicating and collaborating with other developers</li>\n<li>You can give back to the developer community</li>\n</ol>\n<p>All great opportunities! Now, let’s talk about how to get started!</p>\n<h3>How do I find an open source project?</h3>\n<p>In my opinion, this can be the hardest part of OSS. There are tons of projects out there that are currently being worked on, but how do you know which one is the right one for you? There are a few small ways you can make the search a bit easier.</p>\n<p>First off, I’d recommend looking at repositories for tools you use on a daily basis. This will give you an advantage because you will be more familiar with the product, what it’s intended to do, and how it can be improved.</p>\n<p>Another way to find good projects is to search GitHub for repos built using your strongest programming language. When getting started, you want to reduce your barrier to entry, so adding a completely new language to the mix could dramatically slow your progress.</p>\n<p>Lastly, I suggest looking for projects that are being actively developed. The last thing you want to do is spend a lot of time and effort working on a project that has been deprecated. A few easy ways to determine a project’s vitality are:</p>\n<ol>\n<li>Look at when the last commit was made. If it’s been a long time, odds are the project has lost momentum.</li>\n<li>Check out how many stars the repo has. Stars indicate community interest in the project.</li>\n<li>See how many contributors the project has. The more, the better because you’ll have plenty of people to ask for help.</li>\n</ol>\n<h3>How do I contribute to an open source project?</h3>\n<p>Now that you’ve found a project to work on, let’s talk about OSS workflows and how you get your code merged.</p>\n<p>First things first, look at the project’s website (or README file) for a contribution guide. These guides will usually describe the projects’s preferred code style, general workflow and provide instructions for setting up your local development environment.</p>\n<p>A very common workflow used in open source projects goes something like this:</p>\n<ol>\n<li>Fork the project repo and make a copy for yourself</li>\n<li>Clone the repo to your local machine and boot up the development environment</li>\n<li>Commit your code changes to git</li>\n<li>Push your work to a feature branch in your fork</li>\n<li>Open a PR against the original project repo</li>\n</ol>\n<p>One thing to note here is that your local git repo will be tracking TWO different repos on GitHub, which are often called “origin” and “upstream”. Origin refers to the forked repo in your GH account whereas “upstream” points to the original project repo. To keep you local copy up to date, you’ll want to <code>git pull upstream [branch]</code> before starting on a new issue. Then, when you’re done and ready to push up your code, you’d run <code>git push origin [branch]</code> and then open a pull request.</p>\n<p>If the paragraph above confused you, don’t worry—you’re definitely not alone! I use git every day and still find myself needing to reference documentation on a regular basis. Before you proceed, feel free to check out this <a href=\"handy%20git%20guide%20from%20Atlassian\">https://www.atlassian.com/git/tutorials/syncing</a> if you want to brush up.</p>\n<p>Once you’ve opened your pull request, project maintainers will review your code, potentially ask for changes and merge your code in. This process is a great opportunity to learn from more experienced developers, which can help build your real-world development skill set.</p>\n<h3>How do I find issues to work on?</h3>\n<p>Now that you’ve found a project and understand the general workflow, where do you find issues to work on? The best place to look is on the project repo’s issues page. On large projects, this page may have hundreds, if not thousands of open issues for you to choose.</p>\n<p>Large repositories like <a href=\"Gatsby\">https://github.com/gatsbyjs/gatsby/issues</a> will usually be well organized and make use of GitHub’s project management features like labels and assignees. Projects of this scale often have a core team maintaining the project while simultaneously coordinating the work done by community contributors.</p>\n<p>Labels can be very helpful when trying to find your first issue. Many projects will make use of labels like “good first issue”, “beginners”, or “help wanted” to denote issues where the maintainers are looking for help. If someone has already begun work on an issue, you’ll often see them assigned to the issue or a status label indicating it’s in progress.</p>\n<p>Another great place to find things you can work on is the project’s Slack channel or Discord server. Often, the project’s core team will be available to offer guidance, answer questions and provide general feedback on your work. As they will have a more intimate knowledge of the codebase, they are also great resources, especially when first getting started.</p>\n<p>If you don’t have any luck finding issues in a specific repo, be on the lookout for seasonal community events like <a href=\"Hacktoberfest\">https://hacktoberfest.digitalocean.com/</a> or <a href=\"24%20Pull%20Requests\">https://24pullrequests.com/</a>. These events aggregate beginner-friendly issues from a wide variety of projects, which helps make it easier to find things to work on. Awesome!</p>\n<h3>Learning from open source</h3>\n<p>My first contribution to an open source project was <a href=\"a%20simple%20documentation%20change%20for%20Brunch\">https://github.com/brunch/brunch.github.io/pull/207</a>, a build tool I was using at the time. Simply because I was using it, I noticed a typo in the docs and decided to fix it. It certainly wasn’t a mind-blowing enhancement, but at least the next person reading the docs would have a slightly better experience.</p>\n<p>Not too after, I discovered the GitLab repo, which had a lot of open style related issues. Since CSS was my strong suit at the time, I made a habit of submitting PRs to the project on a regular basis. Ultimately, this helped me land my first development job because I was already familiar team-based workflows. Had I not been working on open source projects, I would not have had this experience.</p>\n<p>Recently, I jumped back into the world of open source by updating some Gatsby documentation and logging on to their Discord server. In a short period, I’ve been able to help some new Gatsby developers, which has been a great reminder of how far I’ve come. I know more than some and less than others, which allows me to help the former while also learning from the latter. And that’s why the open source is so great!</p>\n<p>So, go find a project, learn something and have fun coding!</p>","frontmatter":{"date":"Mar. 09, 2019","title":"3 Steps to Getting Started with Open Source","heroCaption":"NESA by Makers","heroLink":"https://unsplash.com/@nesabymakers","attachments":[{"publicURL":"/static/circle-of-laptops-714e8f4c948dcc8b916d18fff6448764.jpg"}]},"timeToRead":5}},"pageContext":{"slug":"posts/2019-03-09-open-source/"}}